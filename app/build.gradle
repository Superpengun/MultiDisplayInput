plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    signingConfigs {
        release {
            storeFile file("demo.jks")
            storePassword '123456'
            keyAlias 'demo'
            keyPassword '123456'
        }

        debug {
            storeFile file("demo.jks")
            storePassword '123456'
            keyAlias 'demo'
            keyPassword '123456'
        }
    }

    compileSdkVersion 31

    defaultConfig {
        applicationId "com.zqy.multidisplayinput"
        minSdk 29
        targetSdk 31
        versionCode 1
        versionName "1.0_"+releaseTime()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildToolsVersion '29.0.3'
}

//preBuild {
//    //此处配置目的是让编译时先解析含隐藏api的jar
//    doLast {
//        def imlFile = file( "../.idea/modules/app/"+getRootProject().name + ".app.iml")
//        println 'Change ' +"../.idea/modules/app/"+ getRootProject().name + '.app.iml order'
//        try {
//            def parsedXml = (new XmlParser()).parse(imlFile)
//            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
//            parsedXml.component[1].remove(jdkNode)
//            def sdkString = "Android API " + android.compileSdkVersion + " Platform"
//            println 'what' + sdkString
//            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
//            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
//        } catch (FileNotFoundException e) {
//            // nop, iml not found
//            println "no iml found"
//        }
//    }
//}

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "zqy.multidisplayinput${variant.versionName}" + "_${variant.name}.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "zqy.multidisplayinput${variant.versionName}" + "_${variant.name}.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        Set<File> fileSet = options.bootstrapClasspath.getFiles()
        List<File> newFileList = new ArrayList<>();
        //JAVA语法，可连续调用，输入参数建议为相对路径
        newFileList.add(new File("libs/ZQYAndroidClass.jar"))
        //最后将原始参数添加
        newFileList.addAll(fileSet)
        options.bootstrapClasspath = files(
                newFileList.toArray()
        )
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    compileOnly files('libs\\ZQYAndroidClass.jar')
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    implementation project(path: ':hci')
    implementation project(path: ':sdk')
    implementation project(path: ':common')
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2-native-mt'
}